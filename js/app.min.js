/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
__webpack_require__.r(__webpack_exports__);
document.addEventListener('click', (e) => {
    const generateBtn = e.target.closest('.btn');
    if (generateBtn) {
        generate();
    }
});

function generate() {
    const canvas=document.querySelector(".canvas");
    const context=canvas.getContext("2d");

    let numbers = [];

    for (let index = 0; index < 3; index++) {
        let gen = Math.floor(Math.random() * 3) + 1;
        numbers.push(gen);
        
    }

    canvas.width = 500;
    canvas.height = 500;

    const background = new Image();
    const person = new Image();
    const item = new Image();

    background.src = `img/background/image${numbers[0]}.png`;
    background.onload = function() {
        context.drawImage(background, 0, 0, 500, 500);
        person.src = `img/person/image${numbers[1]}.png`;
        person.onload = function() {
            context.drawImage(person, 0, 0, 500, 500);
            item.src = `img/items/image${numbers[2]}.png`;
            item.onload = function() {
                context.drawImage(item, 0, 0, 500, 500);
                // const img = canvas.toDataURL("image/png");
                // canvas.innerHTML = '<img src="' + img + '" width="500" height="500"/>';
            }            
        }
    };
}

generate();
/******/ })()
;